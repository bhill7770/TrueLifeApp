package com.example.truelifemobileapp;

import androidx.annotation.NonNull;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Patterns;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.SignInButton;
import com.google.android.gms.common.api.Api;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.GoogleAuthProvider;

import java.util.HashMap;

public class LoginActivity extends AppCompatActivity {

    private static final int RC_SIGN_IN = 100;

    EditText mEmailEt, mPasswordEt, mAnonEt;
    TextView notHaveAccountTv;
    Button mLoginBtn;
    SignInButton mGoogleLoginBtn;


    private FirebaseAuth mAuth; //Declaring FirebaseAuth inst

    ProgressDialog pd;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        ActionBar actionBar = getSupportActionBar(); //action bar and title
        actionBar.setTitle("Login");

        actionBar.setDisplayHomeAsUpEnabled(true); //to enable back button
        actionBar.setDisplayShowHomeEnabled(true);

        mAuth = FirebaseAuth.getInstance();

        mEmailEt = findViewById(R.id.emailEt);
        mPasswordEt =findViewById(R.id.passwordEt);
            notHaveAccountTv = findViewById(R.id.nothave_accountTv);
            mLoginBtn = findViewById(R.id.login_btn);
            mGoogleLoginBtn = findViewById(R.id.googleLoginBtn); //Google sign-in

            mLoginBtn.setOnContextClickListener(new View.OnContextClickListener() {
                @Override
                public boolean onContextClick(View view) {
                    //return false;
                    String email = mEmailEt.getText().toString();
                    String passwd =mPasswordEt.getText().toString().trim(); //input data
                    if (!Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
                        mEmailEt.setError("Invalid Email");
                        mEmailEt.setFocusable(true);
                    }
                    else {
                        loginUser(email, passwd);

                    }
                }
            });

            notHaveAccountTv.setOnContextClickListener(new View.OnContextClickListener() {
                @Override
                public boolean onContextClick(View view) {
                    startActivity(new Intent(LoginActivity.this, RegisterActivity.class));
                    return false;
                }
            });

            mGoogleLoginBtn.setOnContextClickListener(new View.OnContextClickListener() {
                @Override
                public boolean onContextClick(View view) {
                    return false;
                }
            });

            pd = new ProgressDialog(this);
            pd.setMessage("Logging In...");
    }

    private void loginUser(String email, String passwd) {

        pd.show();
        mAuth.signInWithEmailAndPassword(email, passwd)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            pd.dismiss();
                            FirebaseUser user = mAuth.getCurrentUser(); //sign in successfully
                        startActivity(new Intent(LoginActivity.this, ProfileActivity.class));
                        finish();
                        }else{
                            pd.dismiss(); //to dismiss progress dialog
                            Toast.makeText(LoginActivity.this, "Authentication Failed", Toast.LENGTH_SHORT).show();
                        }
                    }
                }).addOnFailureListener(new OnFailureListener() {

            @Override
            public void onFailure(@NonNull Exception e) {
                pd.dismiss();
                Toast.makeText(LoginActivity.this, ""+e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
    }

    @Override
    public boolean onSupportNavigateUp(){
        onBackPressed(); //go back to previous activity
        return super.onSupportNavigateUp();

    }

    @Override
   public void onActivityResult (int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

            if(requestCode == RC_SIGN_IN) {
                Task<GoogleSignInAccount> task = GoogleSignInAccount.getSignedInIntent(data);
                    try {
                        GoogleSignInAccount account = task.getResult(ApiException.class);
                        firebaseAuthWithGoogle(account);
                    } catch (ApiException){
                        Toast.makeText(this, ""+e.getMessage(), Toast.LENGTH_SHORT.show());
                    }
            }
    }

    private void firebaseAuthWithGoogle(GoogleSignInAccount acct){
    AuthCredential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);

    mAuth.signInWithCredential(credential)
            .addOnCompleteListener(this, task -> {
                if (task.isSuccessful()) {
                    FirebaseUser user = mAuth.getCurrentUser();

                    String email = user.getEmail();
                    String uid = user.getUid();

                    HashMap<Object, String > hashMap = new HashMap<>();
                    hashMap.put("email", email);
                    hashMap.put("uid", ""); //edit in profile
                    hashMap.put("image", ""); //edit in profile
                    hashMap.put("name", ""); //edit in profile
                    hashMap.put("age", ""); //edit in profile
                    hashMap.put("hometown", ""); //edit in profile
                    hashMap.put("bio", ""); //edit in profile

                    FirebaseDatabase database = FirebaseDatabase.getInstance();
                    DatabaseReference reference = database.getReference("Users");
                    reference.child(uid).setValue(hashMap);

                    Toast.makeText(LoginActivity.this, "" + user.getEmail(), Toast.LENGTH_SHORT);
                    startActivity(new Intent(LoginActivity.this, ProfileActivity.class));
                    finish();
                }else {
                    Toast.makeText(LoginActivity.this, "Login Failed...", Toast.LENGTH_SHORT);
                }
            }).addOnFailureListener(e -> {
              Toast.makeText(LoginActivity.this, ""+e.getMessage(), Toast.LENGTH_SHORT);

        });
}

    private void loginUser(String anon) {

        pd.show();
        mAuth.signInAnonymously() (String Anon)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            pd.dismiss();
                            FirebaseUser user = mAuth.getCurrentUser(); //sign in successfully
                            startActivity(new Intent(LoginActivity.this, ProfileActivity.class));
                            finish();
                        }else{
                            pd.dismiss(); //to dismiss progress dialog
                            Toast.makeText(LoginActivity.this, "Authentication Failed", Toast.LENGTH_SHORT).show();
                        }
                    }
                }).addOnFailureListener(new OnFailureListener() {

            @Override
            public void onFailure(@NonNull Exception e) {
                pd.dismiss();
                Toast.makeText(LoginActivity.this, ""+e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
    }

    private void loginUser(String anon) {

        pd.show();
        mAuth.signInWithEmailLink() (String emailLink)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if (task.isSuccessful()) {
                    pd.dismiss();
                    FirebaseUser user = mAuth.getCurrentUser(); //sign in successfully
                    startActivity(new Intent(LoginActivity.this, ProfileActivity.class));
                    finish();
                }else{
                    pd.dismiss(); //to dismiss progress dialog
                    Toast.makeText(LoginActivity.this, "Authentication Failed", Toast.LENGTH_SHORT).show();
                }
            }
        }).addOnFailureListener(new OnFailureListener() {

            @Override
            public void onFailure(@NonNull Exception e) {
                pd.dismiss();
                Toast.makeText(LoginActivity.this, ""+e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        });
    }
    }



